<!doctype html>
<html lang="de">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta name="theme-color" content="#0ea5e9">
  <title>Finanz-TÃœV â€“ Mobile Ultra</title>

  <!-- Favicon (inline SVG) -->
  <link rel="icon" href='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><defs><linearGradient id="g" x1="0" y1="0" x2="1" y2="1"><stop stop-color="%2306b6d4"/><stop offset="1" stop-color="%2322d3ee"/></linearGradient></defs><rect width="64" height="64" rx="14" fill="black"/><circle cx="32" cy="32" r="20" fill="url(%23g)"/><path d="M18 36l8-10 6 8 8-12 6 8" stroke="white" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round"/></svg>'>
  <meta name="description" content="Interaktiver Finanz-TÃœV: Eingaben rein, moderne KPIs & Charts raus â€“ mobil optimiert, offline nutzbar.">
  <meta property="og:title" content="Finanz-TÃœV â€“ Mobile Ultra">
  <meta property="og:description" content="Gib deine Zahlen ein und erhalte sofort Sparquote, Schuldendienst, Notgroschen-Runway & Projektion.">
  <meta property="og:type" content="website">
  <style>
    /* ====== Design System ====== */
    :root{
      --bg:#0b1220; --panel:rgba(255,255,255,.06); --ink:#e5e7eb; --muted:#94a3b8; --ring:rgba(255,255,255,.12);
      --brand:#22d3ee; --good:#10b981; --warn:#f59e0b; --bad:#ef4444; --shadow:0 10px 30px rgba(2,8,23,.35); --r:16px;
    }
    @media (prefers-color-scheme: light){
      :root{ --bg:#f8fafc; --panel:#ffffff; --ink:#0f172a; --muted:#64748b; --ring:#e2e8f0; --shadow:0 8px 18px rgba(2,8,23,.06) }
    }
    *{box-sizing:border-box}
    html,body{height:100%;margin:0}
    body{
      font:16px/1.45 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto;
      color:var(--ink);
      background:
        radial-gradient(1200px 600px at 100% -10%, rgba(34,211,238,.15), transparent 60%),
        radial-gradient(1000px 500px at -10% 0%, rgba(99,102,241,.12), transparent 50%),
        var(--bg);
      -webkit-font-smoothing:antialiased; text-rendering:optimizeLegibility;
    }
    .app{padding:max(env(safe-area-inset-top),16px) 16px calc(env(safe-area-inset-bottom) + 92px); max-width:720px; margin:0 auto;}
    .topbar{position:sticky; top:0; z-index:10; backdrop-filter:blur(10px); -webkit-backdrop-filter:blur(10px);
      background:linear-gradient(180deg, rgba(0,0,0,.35), transparent); padding:12px 4px 8px; margin:-16px -4px 8px}
    .title{display:flex; align-items:center; gap:10px}
    .logo{width:32px; height:32px; border-radius:9px; background:conic-gradient(from 200deg,#67e8f9,#a78bfa,#67e8f9); box-shadow:0 0 0 4px rgba(255,255,255,.06)}
    h1{font-size:18px; margin:0} .sub{font-size:12px; color:var(--muted); margin-top:2px}

    .panel{background:var(--panel); border:1px solid var(--ring); border-radius:var(--r); box-shadow:var(--shadow)}
    .in{padding:14px}

    .fields{display:grid; gap:12px}
    label{font-size:12px; color:var(--muted); display:block; margin:0 0 6px 2px}
    input[type=number]{width:100%; height:48px; border-radius:12px; border:1px solid var(--ring); background:transparent; color:var(--ink); padding:0 14px; font-size:16px}
    input[type=number]:focus{outline:2px solid color-mix(in srgb, var(--brand) 60%, transparent)}

    .grid2{display:grid; grid-template-columns:1fr 1fr; gap:12px}

    /* KPIs */
    .kpis{display:grid; grid-template-columns:1fr 1fr; gap:10px}
    .kpi{border-radius:14px; padding:12px; border:1px solid var(--ring); background:rgba(255,255,255,.04)}
    .kpi .lab{font-size:11px; color:var(--muted); text-transform:uppercase; letter-spacing:.06em}
    .kpi .val{font-size:20px; font-weight:700}
    .gauge{--p:0; --col:var(--brand); width:56px; height:56px; border-radius:50%;
      background:conic-gradient(var(--col) calc(var(--p)*1%), rgba(255,255,255,.08) 0%); display:grid; place-items:center; font-size:12px; font-weight:700}
    .kflex{display:flex; align-items:center; gap:12px}
    .tone-good{--col:var(--good)} .tone-warn{--col:var(--warn)} .tone-bad{--col:var(--bad)}

    /* Charts */
    .chartCard{padding:10px 10px 4px}
    .pie{width:100%; height:220px}
    .spark{width:100%; height:64px}
    .legend{display:flex; flex-wrap:wrap; gap:10px; margin:8px 2px 0}
    .dot{width:10px; height:10px; border-radius:50%}
    .legend .item{display:flex; align-items:center; gap:6px; font-size:12px; color:var(--ink)}

    /* Bottom Dock */
    .dock{position:fixed; left:0; right:0; bottom:0; z-index:20; padding:10px max(env(safe-area-inset-right),16px) calc(env(safe-area-inset-bottom)+10px) max(env(safe-area-inset-left),16px)}
    .dockBar{max-width:720px; margin:0 auto; display:grid; grid-template-columns: repeat(4,1fr); gap:8px}
    .btn{height:44px; border-radius:12px; border:1px solid var(--ring); background:rgba(255,255,255,.06); color:var(--ink); display:flex; align-items:center; justify-content:center; gap:8px}
    .btn.primary{background:linear-gradient(135deg, #06b6d4, #22d3ee); color:#001019; font-weight:700}

    .muted{color:var(--muted)} .list{font-size:14px} .list li{margin:8px 0}

    @media (min-width:560px){ .kpis{grid-template-columns: repeat(4,1fr)} }
    @media (prefers-reduced-motion: reduce){
      .topbar{backdrop-filter:none; -webkit-backdrop-filter:none}
      .gauge{background:conic-gradient(var(--col) calc(var(--p)*1%), rgba(255,255,255,.12) 0%)}
    }
    @media print{ .dock, .topbar{display:none} body{background:#fff} .panel{background:#fff} }
  </style>
</head>
<body>
  <a class="sr-only" href="#main" style="position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden;">Zum Inhalt springen</a>
  <div class="app" id="main" role="main">
    <div class="topbar" role="banner" aria-label="Kopfbereich">
      <div class="title" aria-label="Titel">
        <div class="logo" aria-hidden="true"></div>
        <div><h1>Finanz-TÃœV</h1><div class="sub">Mobile â€¢ minimal â€¢ innovativ</div></div>
      </div>
    </div>

    <!-- Inputs -->
    <section class="panel" aria-labelledby="inputsTitle">
      <div class="in">
        <div style="display:flex; align-items:center; justify-content:space-between; margin-bottom:8px">
          <div id="inputsTitle" style="font-weight:700">Eingaben</div>
          <label class="muted" style="font-size:12px"><input id="adv" type="checkbox" style="vertical-align:-2px; margin-right:6px" aria-controls="advRows" aria-expanded="false"> Details</label>
        </div>
        <div class="fields" id="form">
          <div>
            <label for="income">Netto-Einkommen mtl. (â‚¬)</label>
            <input id="income" type="number" inputmode="numeric" step="50" placeholder="z. B. 3200" autocomplete="off" />
          </div>
          <div>
            <label for="fixed">Fixkosten mtl. (â‚¬) inkl. variabel</label>
            <input id="fixed" type="number" inputmode="numeric" step="50" placeholder="z. B. 1800" autocomplete="off" />
          </div>
          <div class="grid2">
            <div>
              <label for="debt">Kreditrate mtl. (â‚¬)</label>
              <input id="debt" type="number" inputmode="numeric" step="10" placeholder="z. B. 250" autocomplete="off" />
            </div>
            <div>
              <label for="emerg">Notgroschen (â‚¬)</label>
              <input id="emerg" type="number" inputmode="numeric" step="100" placeholder="z. B. 5000" autocomplete="off" />
            </div>
          </div>
          <div class="grid2 advOnly" id="advRows" style="display:none">
            <div>
              <label for="runway">Ziel-Notgroschen (Monate)</label>
              <input id="runway" type="number" inputmode="numeric" step="1" />
            </div>
            <div>
              <label for="retire">Wunsch-Rente netto (â‚¬/Monat)</label>
              <input id="retire" type="number" inputmode="numeric" step="50" />
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- KPIs -->
    <section class="panel" style="margin-top:12px" aria-labelledby="kpiTitle">
      <div class="in">
        <div id="kpiTitle" class="sr-only" style="position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden;">Kennzahlen & Ampeln</div>
        <div class="kpis" id="kpis" role="list"></div>
      </div>
    </section>

    <!-- Charts -->
    <section class="panel" style="margin-top:12px" aria-labelledby="chartsTitle">
      <div class="in chartCard">
        <h2 id="chartsTitle" class="sr-only" style="position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden;">Charts</h2>
        <canvas class="pie" id="pie" aria-label="Budget-Donut" role="img"></canvas>
        <div class="legend" id="legend" aria-live="polite"></div>
        <div class="muted" id="sumTxt" style="margin-top:6px"></div>
        <canvas class="spark" id="spark" aria-label="Spar-Projektion 12 Monate" role="img"></canvas>
        <div class="muted" style="font-size:12px">12-Monats-Projektion: kumuliertes Sparen bei konstantem Ãœberschuss.</div>
      </div>
    </section>

    <!-- Plan -->
    <section class="panel" style="margin-top:12px" aria-labelledby="planTitle">
      <div class="in">
        <div id="planTitle" style="font-weight:700; margin-bottom:6px">Mini-MaÃŸnahmenplan</div>
        <ul class="list" id="plan"></ul>
      </div>
    </section>
  </div>

  <!-- Bottom Dock -->
  <div class="dock" role="contentinfo">
    <div class="dockBar">
      <button class="btn" id="example" type="button" aria-label="Beispiel laden">âœ¨ Beispiel</button>
      <button class="btn" id="reset" type="button" aria-label="ZurÃ¼cksetzen">â†º Reset</button>
      <button class="btn" id="share" type="button" aria-label="Teilen">ðŸ”— Teilen</button>
      <button class="btn primary" id="save" type="button" aria-label="Als HTML speichern">â¬‡ï¸Ž HTML</button>
    </div>
  </div>

  <script>
    /* ===== Core helpers ===== */
    const $ = (id)=>document.getElementById(id);
    const euro = (n)=> (isFinite(n)? n:0).toLocaleString('de-DE',{style:'currency',currency:'EUR',maximumFractionDigits:0});
    const clamp = (n)=> (isFinite(n)? n:0);

    /* ===== Elements ===== */
    const els = {
      adv: $('adv'),
      income: $('income'), fixed: $('fixed'), debt: $('debt'), emerg: $('emerg'), runway: $('runway'), retire: $('retire'),
      kpis: $('kpis'), plan: $('plan'), pie: $('pie'), legend: $('legend'), sumTxt: $('sumTxt'), spark: $('spark'),
      example: $('example'), reset: $('reset'), share: $('share'), save: $('save'),
    };

    /* ===== State & defaults ===== */
    const state = { income: 3500, fixed: 1800, debt: 250, emerg: 6000, runway: 6, retire: 2200 };
    const LS_KEY = 'finTuvMobileV2';

    function applyQueryDemo(){
      const q = new URLSearchParams(location.search);
      if(q.get('demo') === '1'){
        Object.assign(state,{income:3500,fixed:1800,debt:250,emerg:6000,runway:6,retire:2200});
      }
    }

    /* Gauges */
    const gauge = (label, value, frac, tone, hint='')=>{
      const pct = Math.max(0, Math.min(100, Math.round(frac*100)));
      return `<div class="kpi ${tone}" role="listitem" aria-label="${label} ${value}">
        <div class="kflex">
          <div class="gauge tone-${tone}" style="--p:${pct}" aria-hidden="true">${pct}<span style="font-size:10px">%</span></div>
          <div><div class="lab">${label}</div><div class="val">${value}</div>${hint?`<div class="muted" style="font-size:11px">${hint}</div>`:''}</div>
        </div>
      </div>`;
    };

    function tonesFrom(m){
      return {
        savings: m.savingsRate>=0.20? 'good' : m.savingsRate>=0.10? 'warn':'bad',
        dti: m.dti<=0.20? 'good' : m.dti<=0.35? 'warn':'bad',
        budget: m.surplus>=0? 'good' : Math.abs(m.surplus) <= m.income*0.05 ? 'warn':'bad',
        runway: m.runwayMonths>=state.runway? 'good' : m.runwayMonths>=state.runway*0.6? 'warn':'bad'
      };
    }

    /* Form sync */
    const advRows = document.querySelectorAll('.advOnly');
    function toggleAdv(){ const on = els.adv.checked; advRows.forEach(el=> el.style.display = on? 'grid':'none'); els.adv.setAttribute('aria-expanded', on); }
    function sync(){ ['income','fixed','debt','emerg','runway','retire'].forEach(k=> els[k].value = state[k]); toggleAdv(); }
    function read(){ state.income=+els.income.value||0; state.fixed=+els.fixed.value||0; state.debt=+els.debt.value||0; state.emerg=+els.emerg.value||0; state.runway=+els.runway.value||6; state.retire=+els.retire.value||0; }

    /* Calc */
    function calc(){
      const totalExp = clamp(state.fixed + state.debt);
      const surplus = clamp(state.income - totalExp);
      const savingsRate = state.income>0 ? surplus/state.income : 0;
      const dti = state.income>0 ? state.debt/state.income : 0;
      const runwayMonths = totalExp>0 ? state.emerg/totalExp : 0;
      const expectedState = state.income*0.40; // Heuristik
      const pensionGap = Math.max(state.retire - expectedState, 0);
      const capitalNeeded = pensionGap>0? pensionGap*12/0.035 : 0;
      return { income:state.income, totalExp, surplus, savingsRate, dti, runwayMonths, expectedState, pensionGap, capitalNeeded };
    }

    /* Render everything */
    function render(){
      const m = calc();
      const t = tonesFrom(m);
      els.kpis.innerHTML = [
        gauge('Ãœberschuss', euro(m.surplus), Math.min(Math.abs(m.surplus)/(m.income||1),1), t.budget, m.surplus>=0? 'nach Fixkosten & Schulden':'Defizit'),
        gauge('Sparquote', Math.round(m.savingsRate*100)+'%', m.savingsRate, t.savings, 'vom Netto'),
        gauge('Schulden', Math.round(m.dti*100)+'%', 1-Math.min(m.dti,1), t.dti, 'DTI'),
        gauge('Runway', m.runwayMonths.toFixed(1)+' Mo', Math.min(m.runwayMonths/(state.runway||6),1), t.runway, 'Ziel: â‰¥ '+state.runway)
      ].join('');

      if(state.retire>0){
        els.kpis.insertAdjacentHTML('beforeend', gauge('Gesetzl. Rente', euro(m.expectedState), Math.min(m.expectedState/(state.retire||1),1), 'good', 'Heuristik'));
        els.kpis.insertAdjacentHTML('beforeend', gauge('RentenlÃ¼cke', euro(m.pensionGap), 1-Math.min(m.expectedState/(state.retire||1),1), m.pensionGap>0? 'warn':'good', m.pensionGap>0? 'schlieÃŸen':'' ));
      }

      renderPie(m); renderSpark(m); renderPlan(m);
      localStorage.setItem(LS_KEY, JSON.stringify(state));
    }

    /* Donut chart */
    function renderPie(m){
      const data = [
        {name:'Fixkosten', value: Math.max(state.fixed,0)},
        {name:'Schulden', value: Math.max(state.debt,0)},
        {name:'Ãœberschuss', value: Math.max(m.surplus,0)}
      ];
      const total = data.reduce((a,b)=>a+b.value,0) || 1;
      const ctx = els.pie.getContext('2d');
      const w = els.pie.width = els.pie.clientWidth * devicePixelRatio;
      const h = els.pie.height = els.pie.clientHeight * devicePixelRatio;
      const cx = w/2, cy = h/2, r = Math.min(w,h)/2 - 12*devicePixelRatio;
      ctx.clearRect(0,0,w,h);
      let start= -Math.PI/2;
      const colors = ['#60a5fa','#fb923c','#34d399'];
      data.forEach((d,i)=>{
        const ang = (d.value/total)*Math.PI*2;
        ctx.beginPath(); ctx.arc(cx,cy,r,start,start+ang); ctx.strokeStyle = colors[i%3];
        ctx.lineWidth = Math.max(18*devicePixelRatio, r*0.25); ctx.lineCap='round'; ctx.stroke();
        start += ang;
      });
      els.legend.innerHTML = data.map((d,i)=>`<span class="item"><span class="dot" style="background:${colors[i%3]}"></span>${d.name}: <b>${euro(d.value)}</b></span>`).join('');
      els.sumTxt.textContent = `Ausgaben = Fixkosten + Kreditrate. Ãœberschuss = ${euro(Math.max(m.surplus,0))}.`;
    }

    /* Sparkline projection */
    function renderSpark(m){
      const months = 12, monthly = Math.max(m.surplus,0);
      const arr = Array.from({length:months}, (_,i)=> monthly*(i+1));
      const max = Math.max(...arr, 1);
      const c = els.spark, ctx = c.getContext('2d');
      c.width = c.clientWidth * devicePixelRatio; c.height = c.clientHeight * devicePixelRatio;
      ctx.clearRect(0,0,c.width,c.height);
      ctx.lineWidth = 2*devicePixelRatio; ctx.strokeStyle = '#22d3ee';
      ctx.beginPath();
      arr.forEach((v,i)=>{
        const x = (i/(months-1))*(c.width-6*devicePixelRatio) + 3*devicePixelRatio;
        const y = c.height - (v/max)*(c.height-6*devicePixelRatio) - 3*devicePixelRatio;
        if(i===0) ctx.moveTo(x,y); else ctx.lineTo(x,y);
      });
      ctx.stroke();
      const grd = ctx.createLinearGradient(0,0,0,c.height);
      grd.addColorStop(0,'rgba(34,211,238,.35)'); grd.addColorStop(1,'rgba(34,211,238,0)');
      ctx.lineTo(c.width-3*devicePixelRatio, c.height-3*devicePixelRatio);
      ctx.lineTo(3*devicePixelRatio, c.height-3*devicePixelRatio);
      ctx.closePath(); ctx.fillStyle = grd; ctx.fill();
    }

    /* Plan */
    function renderPlan(m){
      const need = (m.totalExp*state.runway) - state.emerg;
      const items = [
        `<li><b>Notgroschen:</b> Ziel ${state.runway} Mo â‡’ ${euro(m.totalExp*state.runway)}. Aktuell ${euro(state.emerg)} â‡’ ${m.runwayMonths>=state.runway? 'Ziel erreicht.' : 'Fehlen ~ '+euro(Math.max(need,0))+'.'}</li>`,
        `<li><b>Sparquote:</b> ${Math.round(m.savingsRate*100)}%. ${m.savingsRate<0.1? 'Ziel >10% anpeilen.': m.savingsRate<0.2? 'Solide â€“ Richtung 20%.':'Sehr gut â€“ beibehalten.'}</li>`,
        `<li><b>Schulden:</b> Quote ${Math.round(m.dti*100)}%. ${m.dti>0.35? 'Tilgung/ Umschuldung prÃ¼fen.': m.dti>0.2? 'Im Blick behalten.':'Unkritisch.'}</li>`
      ];
      if(state.retire>0 && m.pensionGap>0){
        items.push(`<li><b>Vorsorge:</b> LÃ¼cke ${euro(m.pensionGap)} mtl. â‡’ Kapitalbedarf ~ ${euro(m.capitalNeeded)} (3,5% Entnahme). ETF-Sparplan/ bAV/ privat prÃ¼fen.</li>`);
      }
      els.plan.innerHTML = items.join('');
    }

    /* Events */
    [els.income,els.fixed,els.debt,els.emerg,els.runway,els.retire].forEach(i=> i.addEventListener('input', ()=>{ read(); render(); }));
    els.adv.addEventListener('change', toggleAdv);
    els.example.addEventListener('click', ()=>{ Object.assign(state,{income:3500,fixed:1800,debt:250,emerg:6000,runway:6,retire:2200}); sync(); render(); });
    els.reset.addEventListener('click', ()=>{ Object.assign(state,{income:0,fixed:0,debt:0,emerg:0,runway:6,retire:0}); sync(); render(); });
    els.share.addEventListener('click', async ()=>{
      try{
        const txt = 'Mein Finanz-TÃœV (mobil): Ã–ffne die HTML-Seite im Browser und gib deine Werte ein.';
        if(navigator.share){ await navigator.share({title:'Finanz-TÃœV', text:txt}); } else { alert('Teilen nicht verfÃ¼gbar â€“ Link/Datei manuell senden.'); }
      }catch(e){}
    });
    els.save.addEventListener('click', ()=>{
      const blob = new Blob([document.documentElement.outerHTML], {type:'text/html'});
      const a = document.createElement('a'); a.href = URL.createObjectURL(blob); a.download = 'finanz-tuv-mobile.html'; a.click(); URL.revokeObjectURL(a.href);
    });

    /* Init */
    try{ const saved = JSON.parse(localStorage.getItem(LS_KEY) || 'null'); if(saved){ Object.assign(state, saved); } }catch(e){}
    applyQueryDemo(); sync(); render();
  </script>
</body>
</html>
